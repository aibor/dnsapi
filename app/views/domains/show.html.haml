%h1
  = @domain.name
  = zone_disabled_warning if @domain.disabled?

= notice_or_errors_tag(@domain)

.row
  .col-md-4

    %h3
      = t '.properties'
      = button_to t('c.edit'), edit_domain_path(@domain),
        class: "btn btn-primary", method: :get

    .well
      %dl.dl-prop
        %dt= t('domains.columns.master')
        %dd= @domain.master.blank? ? "-" : @domain.master

        %dt= t('domains.columns.last_check')
        %dd= @domain.last_check.blank? ? "-" : @domain.last_check

        %dt= t 'domains.columns.type'
        %dd= @domain.type.blank? ? "-" : @domain.type

        %dt= t('domains.columns.notified_serial')
        %dd= @domain.notified_serial.blank? ? "-" : @domain.notified_serial
        - if @current_user.admin
          %dt= t 'domains.columns.users'
          %dd= raw @domain.users.empty? ? "-" : @domain.users.map(&:username).join('<br>')

  .col-md-8
    %h3
      = t '.metadata'
      = button_to t('c.new'), new_domain_domainmetadatum_path(@domain),
        class: "btn btn-primary", method: :get

    = render partial: "domainmetadata/domainmetadata",
      locals: {domainmetadata: @domain.domainmetadata.order(:kind)}


%h3= t('.dnssec')

- if @domain.cryptokeys.empty?
  = button_to t('.secure_zone'), secure_domain_path(@domain),
    class: "btn btn-primary", method: :put
- else
  .row
    .col-md-3
      = render partial: "cryptokeys/cryptokeys", locals: {cryptokeys: @domain.cryptokeys}
    .col-md-9
      %table.table.table-striped.table-condensed
        %thead
          %tr
            %th DS Keys
        %tbody
          - @domain.dskeys.each do |d|
            %tr
              %td{style: 'word-break: break-all;'}= d

%hr

%h3
  = t('.records')
  = "(#{@records[:count]})"
  = button_to t('c.new'), new_domain_record_path(@domain),
    class: "btn btn-primary", method: :get
  = button_to t('c.import'), import_domain_path(@domain),
    class: "btn btn-primary", method: :get if @records[:count].zero?

= render partial: 'records/records', locals: {records: @records}
